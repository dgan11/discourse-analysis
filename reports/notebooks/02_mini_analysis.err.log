Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Cell 2 - Import data
posts = []
files = ['../data/1.json', '../data/2.json']

for file in files:
    with open(file, 'r', encoding='utf-8') as f:
        thread = json.load(f)
        
        # Discussion-level features (shared across all posts in thread)
        discussion_features = {
            'post_discussion_id': thread.get('id'),
            'post_discussion_title': thread.get('title'),
            'post_discussion_created_at': pd.to_datetime(thread.get('created_at')),
            'post_discussion_views': thread.get('views'),
            'post_discussion_reply_count': thread.get('posts_count'),
            'post_discussion_like_count': thread.get('like_count'),
            'post_discussion_participant_count': thread.get('participant_count'),
            'post_discussion_word_count': float(thread.get('word_count', 0)),
            'post_category_id': thread.get('category_id'),
            'post_category_name': thread.get('category_name'),
            'post_discussion_tags': thread.get('tags', []),
            'post_discussion_url': f"https://forum.cursor.com/t/{thread.get('slug')}/{thread.get('id')}",
        }
        
        # Extract tags (up to 4)
        tags = thread.get('tags', [])
        for i in range(4):
            discussion_features[f'tag{i+1}'] = tags[i] if i < len(tags) else None
            
        # Post-level features
        for post in thread.get('post_stream', {}).get('posts', []):
            post_data = {
                **discussion_features,  # Include all discussion features
                'post_id': post.get('id'),
                'post_author': post.get('username'),
                'post_author_id': post.get('user_id'),
                'post_created_at': post.get('created_at'),
                'post_content': BeautifulSoup(post.get('cooked', ''), 'html.parser').get_text(),
                'post_content_raw': post.get('cooked', ''),
                'post_read_count': post.get('reads', 0),
                'post_reply_count': post.get('reply_count', 0),
                'post_number': post.get('post_number'),
                'accepted_answer_post': float(post.get('accepted_answer', False)),
                'post_url': f"https://forum.cursor.com/t/{thread.get('slug')}/{thread.get('id')}/{post.get('post_number')}",
            }
            posts.append(post_data)
            
df = pd.DataFrame(posts)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[2], line 6[0m
[1;32m      3[0m files [38;5;241m=[39m [[38;5;124m'[39m[38;5;124m../data/1.json[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m../data/2.json[39m[38;5;124m'[39m]
[1;32m      5[0m [38;5;28;01mfor[39;00m file [38;5;129;01min[39;00m files:
[0;32m----> 6[0m     [38;5;28;01mwith[39;00m [38;5;28;43mopen[39;49m[43m([49m[43mfile[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mr[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mutf-8[39;49m[38;5;124;43m'[39;49m[43m)[49m [38;5;28;01mas[39;00m f:
[1;32m      7[0m         thread [38;5;241m=[39m json[38;5;241m.[39mload(f)
[1;32m      9[0m         [38;5;66;03m# Discussion-level features (shared across all posts in thread)[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py:310[0m, in [0;36m_modified_open[0;34m(file, *args, **kwargs)[0m
[1;32m    303[0m [38;5;28;01mif[39;00m file [38;5;129;01min[39;00m {[38;5;241m0[39m, [38;5;241m1[39m, [38;5;241m2[39m}:
[1;32m    304[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    305[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIPython won[39m[38;5;124m'[39m[38;5;124mt let you open fd=[39m[38;5;132;01m{[39;00mfile[38;5;132;01m}[39;00m[38;5;124m by default [39m[38;5;124m"[39m
[1;32m    306[0m         [38;5;124m"[39m[38;5;124mas it is likely to crash IPython. If you know what you are doing, [39m[38;5;124m"[39m
[1;32m    307[0m         [38;5;124m"[39m[38;5;124myou can use builtins[39m[38;5;124m'[39m[38;5;124m open.[39m[38;5;124m"[39m
[1;32m    308[0m     )
[0;32m--> 310[0m [38;5;28;01mreturn[39;00m [43mio_open[49m[43m([49m[43mfile[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '../data/1.json'

